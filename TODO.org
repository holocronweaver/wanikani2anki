* Version 0.50
** DONE Do not cache API key.
CLOSED: [2017-08-23 Wed 13:10]
** DONE Update genanki documentation.
CLOSED: [2017-08-24 Thu 13:58]
Document new fields, add usage example to README.

Mention that deck creation date is POSIX epoch second timestamp, used
for determining relative due dates of cards.
** DONE Match Wanki deck.
CLOSED: [2017-08-21 Mon]
Kanji, then vocab, then radicals. Use Anki card editor.
** DONE Support vocabulary audio and example sentences.
CLOSED: [2017-08-22 Tue 22:19]
See issue [[https://github.com/holocronweaver/wanikani2anki/issues/3][#3]].

For now this content can be obtained by scraping the site.

Since this content rarely changes and is user-independent, updates can
be done very infrequently, maybe once a year.
** DONE Embed media and fonts.
CLOSED: [2017-08-24 Thu 00:50]
** DONE Support multiple card types and user options.
CLOSED: [2017-08-25 Fri 09:48]
These generally only apply to vocab.
Most of these can probably be configured with JS variables.
*** Japanese -> readings + meanings
Can be split to match WaniKani.
*** CANCELED spoken Japanese -> readings + meanings
Due to number of homonyms, this is useless.
*** CANCELED meanings -> readings
Due to number of synonyms, this is useless.
*** options
**** disable audio
Useful for reducing file size requirements.
**** modes
***** classic
Classic mode attempts to match WaniKani as closely as possible.
***** plus
Plus mode tries to improve upon WaniKani.
** DONE Create cross-platform app and core Python library.
CLOSED: [2017-09-04 Mon 13:35]
Maybe better to do an Anki addon?
** Support export filters.
Add to library, support in CLI.
Should support positive or negative.
*** burned items
*** subjects
radicals, kanji, vocabulary
*** levels
range, single value, current and below, all
*** low success items
Set failure rate.
*** recent unlocks
** Allow SRS translation bypass
Cards are shown in level -> subject order, starting from lowest to
highest.
** Consider converting everything to Anki addon
Doubt the CLI would be used much.
Library be made Anki addon compatible, comes bundled.
Genanki could probably be dropped.
App could be ditched for Anki addon GUI, or they could coexist.

Installing Anki addons is a little fugly, but not too bad: enter code,
auto-installs.
** Bundle app for desktop platforms.
~pyinstall --onefile whatever_has_main.py~
Reduce file size, preferably below 10MB.
** Add exprot filters to app.
** Support mobile Anki (phone + tablet).
*** AnkiDroid
*** AnkiMobile (MacOS/iOS)
** Groom library API.
Clearly separate public vs. private interfaces.
** WaniKani stats Anki addon
A simple Anki addon which produces WaniKani-style stats.
** Write documentation.
CLI, library, app, Anki addon.
* Version 1.00
** Check if scraped data can be obtained from WK API.
See issue [[https://github.com/holocronweaver/wanikani2anki/issues/3][#3]].

WaniKani API V2 is supposedly going to support vocabulary audio and
example sentences in the future. See related [[https://community.wanikani.com/t/API-V2-Alpha-Documentation/18987/67][WaniKani form post]].

Context sentences, meaning and reading mnemonics, and audio.
** Double check WaniKani SRS to Anki SRS translation.
** Ensure deck updates properly.
Need to figure out how to update Anki decks without disrupting SRS
divergence between Anki and WaniKani.
*** Ensure API is queried for updates.
*** Ensure Anki updates deck correctly.
Check cards, notes, models, deck options.
** Polish app.
*** visuals
Cross-platform!
*** wording
*** packaging
** Double check deck visuals.
Use custom study to speed up deck updates and keep cards consistent.
*** desktop (Win, Mac, Linux)
*** mobile (Android, iOS)
*** compare against Ganki (Wanki)
*** ensure media and fonts properly embedded
** Proof read documentation.
Don't forget to add images of cards and app!
** Study with deck daily for 2 weeks.
